@using Microsoft.AspNetCore.Authentication
@using Microsoft.AspNetCore.Authentication.Cookies
@using Microsoft.AspNetCore.Components.Authorization
@using System.Security.Claims
@inject AuthenticationStateProvider AuthProvider
@inject NavigationManager NavigationManager
@rendermode InteractiveServer
@inject HttpClient Http
@inject IJSRuntime JSRuntime

<nav class="navbar navbar-expand-lg navbar-dark bg-dark px-4 py-3 sticky-top">
    <div class="container-fluid d-flex justify-content-between align-items-center">
        <NavLink class="navbar-brand d-flex align-items-center gap-2" href="/">
            <span class="fs-5 fw-semibold">Showtime</span>
        </NavLink>

        <div class="d-flex gap-3">
            <NavLink class="btn btn-outline-light d-flex align-items-center gap-2" href="/" Match="NavLinkMatch.All">
                <i class="bi bi-house-fill"></i> <span>Home</span>
            </NavLink>

            <NavLink class="btn btn-outline-light d-flex align-items-center gap-2" href="/artists">
                <i class="bi bi-person-lines-fill"></i> <span>Artists</span>
            </NavLink>

            <NavLink class="btn btn-outline-light d-flex align-items-center gap-2" href="/festivals">
                <i class="bi bi-music-note-beamed"></i> <span>Festivals</span>
            </NavLink>

            <div class="dropdown">
                <button class="btn btn-outline-light dropdown-toggle d-flex align-items-center gap-2" type="button" id="accountDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                    <i class="bi bi-person-circle"></i>
                    <span>Account</span>
                </button>
                <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="accountDropdown">
                    <AuthorizeView>
                        <NotAuthorized>
                            <li><a class="dropdown-item" href="/login"><i class="bi bi-box-arrow-in-right"></i> Login</a></li>
                            <li><a class="dropdown-item" href="/register"><i class="bi bi-person-plus"></i> Register</a></li>
                        </NotAuthorized>

                        <Authorized>
                            <li class="dropdown-item-text d-flex align-items-center border-bottom pb-2 mb-2" style="pointer-events: none;">
                                <i class="bi bi-person-badge me-2 text-success" "></i>
                                <span class="ms-1" style="padding-left: 4px">@userEmail</span>
                            </li>
                            <AuthorizeView Roles="Admin">
                                <Authorized Context="adminContext">
                                    <li><a class="dropdown-item" href="/users"><i class="bi bi-people"></i> Users</a></li>
                                    <li><a class="dropdown-item" href="/bookings"><i class="bi bi-ticket-perforated"></i> Bookings</a></li>
                                </Authorized>
                            </AuthorizeView>
                            <AuthorizeView Roles="User">
                                <Authorized Context="userContext">
                                    <li><a class="dropdown-item" href="/tickets"><i class="bi bi-ticket-perforated"></i> Tickets</a></li>
                                </Authorized>
                            </AuthorizeView>
                            <li>
                                <a class="dropdown-item text-danger" href="/logout">
                                    <i class="bi bi-box-arrow-right"></i> Logout
                                </a>
                            </li>
                        </Authorized>
                    </AuthorizeView>
                </ul>

            </div>
        </div>
    </div>
</nav>

@code {
    string? userEmail = string.Empty;
    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthProvider.GetAuthenticationStateAsync();
        var userLoggedIn = authState.User;

        if (userLoggedIn.Identity?.IsAuthenticated == true)
        {
            userEmail = userLoggedIn.FindFirst(ClaimTypes.Email)?.Value;
            userEmail = userEmail!.Contains("@") ? userEmail[..userEmail.IndexOf("@")] : userEmail;
        }
    }
    private string GetAccountButtonClass()
    {
        var uri = NavigationManager.Uri.ToLower();
        string[] accountPaths = ["/login", "/register", "/users", "/bookings", "/tickets"];
        return accountPaths.Any(path => uri.Contains(path))
            ? "btn btn-outline-light dropdown-toggle d-flex align-items-center gap-2 active"
            : "btn btn-outline-light dropdown-toggle d-flex align-items-center gap-2";
    }
}